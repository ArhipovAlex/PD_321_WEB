@page "/teachers"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BlazorAppPD_212.Models
@using BlazorAppPD_212.Data
@implements IAsyncDisposable
@inject IDbContextFactory<BlazorAppPD_212.Data.BlazorAppPD_212Context> DbFactory
@rendermode InteractiveServer

<PageTitle>Index</PageTitle>

<h1>Преподаватели</h1>

<p>
    <a href="teachers/create">Create New</a>
</p>
<div>
    <input type="button" value="Очистить"/>
</div>
<QuickGrid Class="table" Items="FilteredTeachers">
    <PropertyColumn Property="teacher => (DateTime.Today.Subtract(teacher.work_since)).Days/365" Title="Трудовой стаж лет" Sortable="true"/>
    <PropertyColumn Property="teacher => teacher.last_name" Title="Фамилия" Sortable="true">
        <ColumnOptions>
            <div>
                <input type="search" id="lastNamesearch" @bind="lastNameFilter" @bind:event="oninput"/>
            </div>
        </ColumnOptions>
    </PropertyColumn>
    <PropertyColumn Property="teacher => teacher.first_name" Title="Имя" Sortable="true">
        <ColumnOptions>
            <div>
                <input type="search" @bind="firstNameFilter" @bind:event="oninput" />
            </div>
        </ColumnOptions>
    </PropertyColumn>
    <PropertyColumn Property="teacher => teacher.middle_name" Title="Отчество" Sortable="true">
        <ColumnOptions>
            <div>
                <input type="search" @bind="middleNameFilter" @bind:event="oninput"/>
            </div>
        </ColumnOptions>
    </PropertyColumn>
    <PropertyColumn Property="teacher => (DateTime.Today.Subtract(teacher.birth_date)).Days/365" Title="Возраст лет" Sortable="true" />

    <TemplateColumn Context="teacher">
        @* <a href="@($"teachers/edit?teacher_id={teacher.teacher_id}")">Edit</a> | *@
        <a href="@($"teachers/details?teacher_id={teacher.teacher_id}")">Details</a>
        @* <a href="@($"teachers/delete?teacher_id={teacher.teacher_id}")">Delete</a> *@
    </TemplateColumn>
</QuickGrid>

@code {
    string lastNameFilter = "";
    string firstNameFilter = "";
    string middleNameFilter = "";
    IQueryable<Teacher> FilteredTeachers => context.Teachers.Where(t => (t.last_name.Contains(lastNameFilter)&&t.first_name.Contains(firstNameFilter)&&t.middle_name.Contains(middleNameFilter)));
    private BlazorAppPD_212Context context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }
    public void CleanFilters()
    {
        lastNameFilter = "";
        firstNameFilter = "";
        middleNameFilter = "";
        
    }
    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
