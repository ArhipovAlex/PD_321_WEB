@page "/digits"
@rendermode InteractiveServer

<PageTitle>Digits</PageTitle>

<h3>Digits</h3>
<div class="capacity_selector">
	<input type="radio" name="selector_value" value="4 Байта" id="dword" />	<label for="dword">DWORD</label>
	<input type="radio" name="selector_value" value="2 Байта" id="word" />	<label for="word">WORD</label>
	<input type="radio" name="selector_value" value="1 Байт" id="byte" checked/>	<label for="byte">BYTE</label>
</div>
<div>
	<div class="bin" @onclick='()=>{Bin2Dec();Dec2Hex();}'>
@* 		<div class="digit" @onmouseup="() => Values[7] = Values[7] == 0 ? 1 : 0">@Values[7]</div>
		<div class="digit" @onmouseup="() => Values[6] = Values[6] == 0 ? 1 : 0">@Values[6]</div>
		<div class="digit" @onmouseup="() => Values[5] = Values[5] == 0 ? 1 : 0">@Values[5]</div>
		<div class="digit" @onmouseup="() => Values[4] = Values[4] == 0 ? 1 : 0">@Values[4]</div>
		<div class="digit" @onmouseup="() => Values[3] = Values[3] == 0 ? 1 : 0">@Values[3]</div>
		<div class="digit" @onmouseup="() => Values[2] = Values[2] == 0 ? 1 : 0">@Values[2]</div>
		<div class="digit" @onmouseup="() => Values[1] = Values[1] == 0 ? 1 : 0">@Values[1]</div>
		<div class="digit" @onmouseup="() => Values[0] = Values[0] == 0 ? 1 : 0">@Values[0]</div> *@
		@for (int i = binCapacity-1; i >= 0; i--)
		{
			if (i >= binCapacity || i < 0) break;
			<div class="digit" @onmouseup="() => Values[i] = Values[i] == 0 ? 1 : 0">@Values[i]</div>
		}
		<div class="result_dec">@Decimal</div>
	</div>
	<div class="hex">
		<div class="hex_digit">@num_hex?[0]</div>
		<div class="hex_digit">@num_hex?[1]</div>
		<div class="result_dec"></div>
	</div>
</div>

@code {
	static int binCapacity = 8;
	static int hexCapacity = binCapacity / 4;
	public int[] Values { get; set; } = new int[binCapacity];
	public int Decimal { get; set; } = 0;
	public string num_hex { get; set; }
	//public int[] Hex { get; set; }=new int[2];
	private void Bin2Dec()
	{
		Decimal = 0;
		int weight = 1;
		for (int i= 0;i<Values.Length; i++)
		{
			Decimal += Values[i] * weight;
			weight *= 2;
		}
	}
	public void Dec2Hex()
	{
		// int num_dec = Decimal;
		// for(int i = 0; num_dec > 0; i++)
		// {
		// 	Hex[i] = num_dec % 16;
		// 	num_dec /= 16;
		// }
		num_hex = Decimal.ToString("X");
		if (num_hex.Length < 2) num_hex = num_hex.Insert(0,"0");
	}
}
